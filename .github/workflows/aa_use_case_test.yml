# This is a basic workflow to help you get started with Actions

name: Use case tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Default settings
defaults:
    run:
      shell: bash

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  aatest_ds000114_AROMA:
    name: Testing AROMA on fMRI

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 51200
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      
      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v2

      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '2.7'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools under $HOME/tools (SPM, FaceMasking, FSL)
        run: |
          source $GITHUB_WORKSPACE/.github/workflows/tools_install.sh
        env:
          LOAD_FSL: 1
          LOAD_FREESURFER: 0

      - name: Retrive test data under $HOME/data/aa_demo
        run: |
          mkdir -p $HOME/data/aa_demo
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "task-*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "dwi*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-01 $HOME/data/aa_demo/ds000114/sub-01 --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Configure aa
        run: |
          echo "Free space:"
          df -h
          mkdir $HOME/.aa
          cp $GITHUB_WORKSPACE/.github/workflows/aap_parameters_defaults_GitHub.xml $HOME/.aa/aap_parameters_user.xml
          mkdir $HOME/projects

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')); aa_ver5; SPM = spmClass(fullfile(getenv('HOME'),'tools','spm12')); SPM.load; aa_test('glob','aatest_ds000114_AROMA','haltonerror',true)

      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          name: aatest_ds000114_AROMA
          path: |
            ~/projects/
            
  aatest_ds000114_dartel:
    name: Testing SPM DARTEL

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 51200
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      
      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v2

      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '2.7'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools under $HOME/tools (SPM, FaceMasking, FSL standards)
        run: |
          source $GITHUB_WORKSPACE/.github/workflows/tools_install.sh
        env:
          LOAD_FSL: 0
          LOAD_FREESURFER: 0

      - name: Retrive test data under $HOME/data/aa_demo
        run: |
          mkdir -p $HOME/data/aa_demo
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "task-*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "dwi*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-01 $HOME/data/aa_demo/ds000114/sub-01 --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Configure aa
        run: |
          echo "Free space:"
          df -h
          mkdir $HOME/.aa
          cp $GITHUB_WORKSPACE/.github/workflows/aap_parameters_defaults_GitHub.xml $HOME/.aa/aap_parameters_user.xml
          mkdir $HOME/projects

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')); aa_ver5; SPM = spmClass(fullfile(getenv('HOME'),'tools','spm12')); SPM.load; aa_test('glob','aatest_ds000114_dartel','haltonerror',true)

      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          name: aatest_ds000114_dartel
          path: |
            ~/projects/

  aatest_ds000114_diffusion:
    name: Testing Diffusion (with FSL)

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 51200
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      
      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v2

      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '2.7'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools under $HOME/tools (SPM, FSL, FaceMasking)
        run: |
          source $GITHUB_WORKSPACE/.github/workflows/tools_install.sh
        env:
          LOAD_FSL: 1
          LOAD_FREESURFER: 0

      - name: Retrive test data under $HOME/data/aa_demo
        run: |
          mkdir -p $HOME/data/aa_demo
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "task-*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "dwi*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-01/ses-test $HOME/data/aa_demo/ds000114/sub-01/ses-test --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Configure aa
        run: |
          echo "Free space:"
          df -h
          mkdir $HOME/.aa
          cp $GITHUB_WORKSPACE/.github/workflows/aap_parameters_defaults_GitHub.xml $HOME/.aa/aap_parameters_user.xml
          mkdir $HOME/projects

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')); aa_ver5; SPM = spmClass(fullfile(getenv('HOME'),'tools','spm12')); SPM.load; aa_test('glob','aatest_ds000114_diffusion','haltonerror',true)

      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          name: aatest_ds000114_diffusion
          path: |
            ~/projects/

  aatest_ds000114_fmri:
    name: Testing fMRI

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 51200
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      
      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v2

      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '2.7'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools under $HOME/tools (SPM, FaceMasking, FSL standards)
        run: |
          source $GITHUB_WORKSPACE/.github/workflows/tools_install.sh
        env:
          LOAD_FSL: 0
          LOAD_FREESURFER: 0

      - name: Retrive test data under $HOME/data/aa_demo
        run: |
          mkdir -p $HOME/data/aa_demo
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "task-*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "dwi*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-01 $HOME/data/aa_demo/ds000114/sub-01 --quiet --recursive --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-02 $HOME/data/aa_demo/ds000114/sub-02 --quiet --recursive --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-03 $HOME/data/aa_demo/ds000114/sub-03 --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Configure aa
        run: |
          echo "Free space:"
          df -h
          mkdir $HOME/.aa
          cp $GITHUB_WORKSPACE/.github/workflows/aap_parameters_defaults_GitHub.xml $HOME/.aa/aap_parameters_user.xml
          mkdir $HOME/projects

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')); aa_ver5; SPM = spmClass(fullfile(getenv('HOME'),'tools','spm12')); SPM.load; aa_test('glob','aatest_ds000114_fmri','haltonerror',true)

      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          name: aatest_ds000114_fmri
          path: |
            ~/projects/

  aatest_ds000114_scrubbing:
    name: Testing fMRI frame censoring

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 51200
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      
      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v2

      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '2.7'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools under $HOME/tools (SPM, FaceMasking, FSL standards)
        run: |
          source $GITHUB_WORKSPACE/.github/workflows/tools_install.sh
        env:
          LOAD_FSL: 0
          LOAD_FREESURFER: 0

      - name: Retrive test data under $HOME/data/aa_demo
        run: |
          mkdir -p $HOME/data/aa_demo
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "task-*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "dwi*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-01 $HOME/data/aa_demo/ds000114/sub-01 --quiet --recursive --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-02 $HOME/data/aa_demo/ds000114/sub-02 --quiet --recursive --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-03 $HOME/data/aa_demo/ds000114/sub-03 --quiet --recursive --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-04 $HOME/data/aa_demo/ds000114/sub-04 --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Configure aa
        run: |
          echo "Free space:"
          df -h
          mkdir $HOME/.aa
          cp $GITHUB_WORKSPACE/.github/workflows/aap_parameters_defaults_GitHub.xml $HOME/.aa/aap_parameters_user.xml
          mkdir $HOME/projects

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')); aa_ver5; SPM = spmClass(fullfile(getenv('HOME'),'tools','spm12')); SPM.load; aa_test('glob','aatest_ds000114_scrubbing','haltonerror',true)

      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          name: aatest_ds000114_scrubbing
          path: |
            ~/projects/

  aatest_ds002737_deface:
    name: Testing (Freesurfer) Deface and FaceMasking

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 51200
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      
      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v2

      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '2.7'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools under $HOME/tools (SPM, FSL, FreeSurfer, FaceMasking)
        run: |
          source $GITHUB_WORKSPACE/.github/workflows/tools_install.sh
        env:
          LOAD_FSL: 1
          LOAD_FREESURFER: 1

      - name: Retrive test data under $HOME/data/aa_demo
        run: |
          mkdir -p $HOME/data/aa_demo
          aws s3 cp s3://openneuro.org/ds002737/sub-01/ses-03 $HOME/data/aa_demo/ds002737/sub-01/ses-03 --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Configure aa
        run: |
          echo "Free space:"
          df -h
          mkdir $HOME/.aa
          cp $GITHUB_WORKSPACE/.github/workflows/aap_parameters_defaults_GitHub.xml $HOME/.aa/aap_parameters_user.xml
          mkdir $HOME/projects

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')); aa_ver5; SPM = spmClass(fullfile(getenv('HOME'),'tools','spm12')); SPM.load; aa_test('glob','aatest_ds002737_deface','haltonerror',true)

      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          name: aatest_ds002737_deface
          path: |
            ~/projects/