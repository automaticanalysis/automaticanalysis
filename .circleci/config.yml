# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1
orbs:
  matlab: mathworks/matlab@0
  aws-cli: circleci/aws-cli@3

executors:
  ubuntu:
    machine:
      image: 'ubuntu-2204:2022.04.1'
      resource_class: medium

    environment:
      GITHUB_WORKSPACE: /home/circleci/automaticanalysis
      AWS_DEFAULT_REGION: eu-west-2
      AWS_EC2_METADATA_DISABLED: true

commands:
  testaa:
    description: "Testing Automatic Analysis"
    parameters:
      parameter_xml: 
        type: string
        default: aap_parameters_defaults_CircleCI.xml
      load_fsl:
        type: integer
        default: 0
      load_freesurfer:
        type: integer
        default: 0
      command:
        type: string
        default: aa_ver5
    steps:
      - checkout
      - matlab/install:
          release: R2020a # comes with Python 2.7

      - run:
          name: Install tools and configure aa
          command: |
            mv ~/project $GITHUB_WORKSPACE
            cd $GITHUB_WORKSPACE/.github/workflows
            python trigger_install.py
          environment:
            LOAD_FSL: << parameters.load_fsl >>
            LOAD_FREESURFER: << parameters.load_freesurfer >>
            PARAMETER_XML: << parameters.parameter_xml >>

      - aws-cli/setup:
          profile-name: example

      - matlab/run-command:
          command: addpath(getenv('GITHUB_WORKSPACE')); aa = aaClass; aap = aarecipe(fullfile(aa.Path,'.github','workflows','<< parameters.parameter_xml >>')); SPM = aas_inittoolbox(aap,'spm'); SPM.load; <<parameters.command>>
      
      # Artifacts (TODO: grab images)
      - run:
          name: Prepare artifacts
          command: |
            mkdir /tmp/output
            cp $GITHUB_WORKSPACE/developer/aa_test.log /tmp/output
      - store_artifacts:
          destination: log
          path: /tmp/output

jobs:
  unittest_not-large:
    executor: ubuntu
    steps:
      - testaa:
          parameter_xml: aap_parameters_defaults_CircleCI.xml
          load_freesurfer: 0
          load_fsl: 0
          command: aa_test('haltonerror', true, 'not_tags', {'Large'})

  unittest_tutorial-minimal:
    executor: ubuntu
    steps:
      - testaa:
          parameter_xml: aap_parameters_defaults_CircleCI_minimal.xml
          load_freesurfer: 0
          load_fsl: 0
          command: aa_test('haltonerror', true, 'tags', {'Minimal_install'})

  usecase_AROMA:
    executor: ubuntu
    steps:
      - testaa:
          parameter_xml: aap_parameters_defaults_CircleCI.xml
          load_freesurfer: 0
          load_fsl: 1
          command: aa_downloaddemo(aap,'ds000114',{'sub-01'}); aa_test('glob','aatest_ds000114_AROMA','haltonerror',true)

workflows:
  build:
    jobs:
      - unittest_not-large:
          context: aws
      - unittest_tutorial-minimal:
          context: aws
      - usecase_AROMA:
          context: aws