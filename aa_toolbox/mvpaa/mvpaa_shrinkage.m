% MVPAA Shrinkage ==> THIS IS A FIRST LEVEL FUNCTION
% This does not actually do shrinkage, but it does obtain the residuals
% from the data, slightly aiding the analysis (sometimes)

function Resid = mvpaa_shrinkage(aap, Betas)

%Betas => (voxels, conditions, blocks, sessions)

included_all = all(all(all(~isnan(Betas),4),3),2);

% reduced Beta values, where voxels with NaNs are removed...
rBetas = reshape(Betas(repmat(included_all, ...
    ...
    [1, ...
    aap.tasklist.currenttask.settings.conditions,  ...
    aap.tasklist.currenttask.settings.blocks, ...
    aap.tasklist.currenttask.settings.sessions])) ...
    ....
    ,[sum(included_all), ...
    aap.tasklist.currenttask.settings.conditions,  ...
    aap.tasklist.currenttask.settings.blocks, ...
    aap.tasklist.currenttask.settings.sessions]);

% The mean across blocks & sessions...
Mean = mean(mean(rBetas,2),1);

% Get residuals
Resid = rBetas - repmat(Mean,[size(rBetas,1), aap.tasklist.currenttask.settings.conditions,  1, 1]);